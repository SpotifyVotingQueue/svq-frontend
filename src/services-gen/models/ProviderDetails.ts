/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UserInfoEndpoint } from './UserInfoEndpoint';
import {
    UserInfoEndpointFromJSON,
    UserInfoEndpointFromJSONTyped,
    UserInfoEndpointToJSON,
} from './UserInfoEndpoint';

/**
 * 
 * @export
 * @interface ProviderDetails
 */
export interface ProviderDetails {
    /**
     * 
     * @type {string}
     * @memberof ProviderDetails
     */
    authorizationUri?: string;
    /**
     * 
     * @type {string}
     * @memberof ProviderDetails
     */
    tokenUri?: string;
    /**
     * 
     * @type {UserInfoEndpoint}
     * @memberof ProviderDetails
     */
    userInfoEndpoint?: UserInfoEndpoint;
    /**
     * 
     * @type {string}
     * @memberof ProviderDetails
     */
    jwkSetUri?: string;
    /**
     * 
     * @type {string}
     * @memberof ProviderDetails
     */
    issuerUri?: string;
    /**
     * 
     * @type {{ [key: string]: object; }}
     * @memberof ProviderDetails
     */
    configurationMetadata?: { [key: string]: object; };
}

/**
 * Check if a given object implements the ProviderDetails interface.
 */
export function instanceOfProviderDetails(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProviderDetailsFromJSON(json: any): ProviderDetails {
    return ProviderDetailsFromJSONTyped(json, false);
}

export function ProviderDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProviderDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'authorizationUri': !exists(json, 'authorizationUri') ? undefined : json['authorizationUri'],
        'tokenUri': !exists(json, 'tokenUri') ? undefined : json['tokenUri'],
        'userInfoEndpoint': !exists(json, 'userInfoEndpoint') ? undefined : UserInfoEndpointFromJSON(json['userInfoEndpoint']),
        'jwkSetUri': !exists(json, 'jwkSetUri') ? undefined : json['jwkSetUri'],
        'issuerUri': !exists(json, 'issuerUri') ? undefined : json['issuerUri'],
        'configurationMetadata': !exists(json, 'configurationMetadata') ? undefined : json['configurationMetadata'],
    };
}

export function ProviderDetailsToJSON(value?: ProviderDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'authorizationUri': value.authorizationUri,
        'tokenUri': value.tokenUri,
        'userInfoEndpoint': UserInfoEndpointToJSON(value.userInfoEndpoint),
        'jwkSetUri': value.jwkSetUri,
        'issuerUri': value.issuerUri,
        'configurationMetadata': value.configurationMetadata,
    };
}


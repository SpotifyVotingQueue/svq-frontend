/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TokenType } from './TokenType';
import {
    TokenTypeFromJSON,
    TokenTypeFromJSONTyped,
    TokenTypeToJSON,
} from './TokenType';

/**
 * 
 * @export
 * @interface OAuth2AccessToken
 */
export interface OAuth2AccessToken {
    /**
     * 
     * @type {string}
     * @memberof OAuth2AccessToken
     */
    tokenValue?: string;
    /**
     * 
     * @type {Date}
     * @memberof OAuth2AccessToken
     */
    issuedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof OAuth2AccessToken
     */
    expiresAt?: Date;
    /**
     * 
     * @type {TokenType}
     * @memberof OAuth2AccessToken
     */
    tokenType?: TokenType;
    /**
     * 
     * @type {Set<string>}
     * @memberof OAuth2AccessToken
     */
    scopes?: Set<string>;
}

/**
 * Check if a given object implements the OAuth2AccessToken interface.
 */
export function instanceOfOAuth2AccessToken(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OAuth2AccessTokenFromJSON(json: any): OAuth2AccessToken {
    return OAuth2AccessTokenFromJSONTyped(json, false);
}

export function OAuth2AccessTokenFromJSONTyped(json: any, ignoreDiscriminator: boolean): OAuth2AccessToken {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'tokenValue': !exists(json, 'tokenValue') ? undefined : json['tokenValue'],
        'issuedAt': !exists(json, 'issuedAt') ? undefined : (new Date(json['issuedAt'])),
        'expiresAt': !exists(json, 'expiresAt') ? undefined : (new Date(json['expiresAt'])),
        'tokenType': !exists(json, 'tokenType') ? undefined : TokenTypeFromJSON(json['tokenType']),
        'scopes': !exists(json, 'scopes') ? undefined : json['scopes'],
    };
}

export function OAuth2AccessTokenToJSON(value?: OAuth2AccessToken | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'tokenValue': value.tokenValue,
        'issuedAt': value.issuedAt === undefined ? undefined : (value.issuedAt.toISOString()),
        'expiresAt': value.expiresAt === undefined ? undefined : (value.expiresAt.toISOString()),
        'tokenType': TokenTypeToJSON(value.tokenType),
        'scopes': value.scopes === undefined ? undefined : Array.from(value.scopes as Set<any>),
    };
}

